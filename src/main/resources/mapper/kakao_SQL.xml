<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org/DTD Config 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kakao.assignment">
	
	<select id="selectKakaoUsers" parameterType="com.kakao.assignment.object.UserVO" resultType="com.kakao.assignment.object.UserVO">
		SELECT app_user_id
		     , nickname
		     , access_token
		     , refresh_token
		     , created_at
	     FROM kakao_users
	     <if test="nickname != null and nickname !='' ">
			WHERE nickname = #{nickname} 
		</if>
	    
	</select>
	
	<select id="selectKakaoUser" parameterType="com.kakao.assignment.object.UserVO" resultType="com.kakao.assignment.object.UserVO">
		SELECT app_user_id
		     , nickname
		     , access_token
		     , refresh_token
		     , created_at
	     FROM kakao_users
	    WHERE app_user_id = #{app_user_id} 
	</select>

	<insert id="insertKakaoUser" parameterType="com.kakao.assignment.object.UserVO">
		INSERT INTO kakao_users
		(
			app_user_id,
			nickname,
			access_token,
			refresh_token,
			created_at
		)VALUES
		(
			#{app_user_id},
			#{nickname},
			#{access_token},
			#{refresh_token},
			SYSDATE()
		) 
	</insert>
	
	<update id="updateKakaoUser" parameterType="com.kakao.assignment.object.UserVO">
		UPDATE kakao_users
		   SET nickname = #{nickname}
		<if test="access_token != null and access_token !='' ">
			, access_token = #{access_token}
		</if>
		<if test="refresh_token != null and refresh_token !='' ">
			, refresh_token = #{refresh_token}
		</if>
		 WHERE app_user_id = #{app_user_id}
	</update>

	<delete id="deleteKakaoUser" parameterType="long">
		DELETE FROM kakao_users
		      WHERE	app_user_id = #{app_user_id} 
	</delete>
	
	<select id="selectKakaoApiLogs" parameterType="String" resultType="com.kakao.assignment.object.LogVO">
		SELECT A.request_url as request_url
		     , A.request_method as request_method
		     , A.request_header as request_header
		     , A.request_body as request_body
		     , A.response_code as response_code
		     , A.response_header as response_header
		     , A.response_body as response_body
		     , A.created_at as created_at
	  	  FROM
			(SELECT CONCAT( request_url, request_method, request_header, request_body, response_code, response_header, response_body ) as full_log
			     , request_url 
			     , request_method 
			     , request_header 
			     , request_body 
			     , response_code 
			     , response_header 
			     , response_body 
			     , created_at 
			FROM kakao_api_logs ) A
		WHERE 1=1
		 <if test="search_string != null and search_string !='' ">
		   AND A.full_log LIKE #{search_string}
		  </if>

	</select>

	<insert id="insertKakaoApiLog" parameterType="com.kakao.assignment.object.LogVO">
		INSERT INTO kakao_api_logs
		(
			request_url
		  , request_method
		  , request_header
		  , request_body
		  , response_code
		  , response_header
		  , response_body
		  , created_at
		)VALUES
		(
			#{request_url}
		  , #{request_method}
		  , #{request_header}
		  , #{request_body}
		  , #{response_code}
		  , #{response_header}
		  , #{response_body}
		  , SYSDATE()
		) 
	</insert>
</mapper>